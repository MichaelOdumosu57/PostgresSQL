http://www.heartnsoul.com/ascii_art/elephants.txt
               _..--""-.                  .-""--.._
           _.-'         \ __...----...__ /         '-._
         .'      .:::...,'              ',...:::.      '.
        (     .'``'''::;                  ;::'''``'.     )
         \             '-)              (-'             /
          \             /                \             /
           \          .'.-.            .-.'.          /
            \         | \0|            |0/ |         /
            |          \  |   .-==-.   |  /          |
             \          `/`;          ;`\`          /
              '.._      (_ |  .-==-.  | _)      _..'
                  `"`"-`/ `/'        '\` \`-"`"`
                       / /`;   .==.   ;`\ \
                 .---./_/   \  .==.  /   \ \
                / '.    `-.__)       |    `"
               | =(`-.        '==.   ;
                \  '. `-.           /
                 \_:_)   `"--.....-'

POSTGRES sql

table

 Full secton
                          _.-----.._____,-~~~~-._...__
                          ,-'            /         `....
                        ,'             ,'      .  .  \::.
                      ,'        . ''    :     . \  `./::..
                    ,'    ..   .     .      .  . : ;':::.
                   /     :go. :       . :    \ : ;'.::.
                   |     ' .o8)     .  :|    : ,'. .
                  /     :   ~:'  . '   :/  . :/. .
                 /       ,  '          |   : /. .
                /       ,              |   ./.
                L._    .       ,' .:.  /  ,'.
               /-.     :.--._,-'~~~~~~| ,'|:
              ,--.    /   .:/         |/::| `.
              |-.    /   .;'      .-__)::/    \
 ...._____...-|-.  ,'  .;'      .' '.'|;'      |
   ~--..._____\-_-'  .:'      .'   /  '
    ___....--~~   _.-' `.___.'   ./
      ~~------+~~_. .    ~~    .,'
                  ~:_.' . . ._:'
                     ~~-+-+~~


chapter
           .-~~-. .--.
          /      /   "\
         /    \ |  \   \
        |/\    | \_/-'\ \
        A |   /  ||   /_/
          |__||__||
         /~~~~~~~~~~\
        /\_/\_/\_/\_/\
       /\/ \/ \/ \/ \/\
    __/________________\__



subsecton
           _    _
          / \__/ \_____
         /  /  \  \    `\
         )  \''/  (     |\
         `\__)/__/'_\  / `
            //_|_|~|_|_|
            ^""'"' ""'"'

bullet point
     ___.---.___
   .'  (     )  '.
   )   /)' '(    )
   ',_( ';-;'\_,'
         |-|
         (")


link
        ____
       /.   \__
      /_  \_/  \
     // \  ___ |\
      snd|_| |_|


tip
                      _    _
                     /=\""/=\
                    (=(0_0 |=)__
                     \_\ _/_/   )
                       /_/   _  /\
                  snd |/ |\ || |
                         ~ ~  ~




                          _.-----.._____,-~~~~-._...__
                          ,-'            /         `....
                        ,'             ,'      .  .  \::.
   what is            ,'        . ''    :     . \  `./::..
    POSTGRES        ,'    ..   .     .      .  . : ;':::.
     and history   /     :go. :       . :    \ : ;'.::.
                   |     ' .o8)     .  :|    : ,'. .
                  /     :   ~:'  . '   :/  . :/. .
                 /       ,  '          |   : /. .
                /       ,              |   ./.
                L._    .       ,' .:.  /  ,'.
               /-.     :.--._,-'~~~~~~| ,'|:
              ,--.    /   .:/         |/::| `.
              |-.    /   .;'      .-__)::/    \
 ...._____...-|-.  ,'  .;'      .' '.'|;'      |
   ~--..._____\-_-'  .:'      .'   /  '
    ___....--~~   _.-' `.___.'   ./
      ~~------+~~_. .    ~~    .,'
                  ~:_.' . . ._:'
                     ~~-+-+~~

An ORDBMS was the early verison of databases from Berkeley
it offers a lot and it can be exteneded by the user
upgrades to it were foucused on portability and reliablitiy
then came postgres95

use the wiki, web site for latest info mailing list  and yourself to learn more about postgres



                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
5 Reporting bugs    |/\    | \_/-'\ \
                    A |   /  ||   /_/
                      |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__
                    
there are bug reporting guidelines to follow


           _    _
          / \__/ \_____
         /  /  \  \    `\
5.1      )  \''/  (     |\
         `\__)/__/'_\  / `
            //_|_|~|_|_|
            ^""'"' ""'"'
    
if from documentation you cannot understand send the bug and the documenatation



           _    _
          / \__/ \_____
         /  /  \  \    `\
5.2      )  \''/  (     |\
         `\__)/__/'_\  / `
            //_|_|~|_|_|
            ^""'"' ""'"'

state only facts not what you think went wrong
set  psql, say \set VERBOSITY verbose beforehand
from server log run-time parameter log_error_verbosity to verbose

SELECT version(); finds version running be specific where the problem is


           _    _
          / \__/ \_____
         /  /  \  \    `\
5.3      )  \''/  (     |\
         `\__)/__/'_\  / `
            //_|_|~|_|_|
            ^""'"' ""'"'

send bugs to
<pgsql-bugs@lists.postgresql.org>


                          _.-----.._____,-~~~~-._...__
                          ,-'            /         `....
                        ,'             ,'      .  .  \::.
    getting started   ,'        . ''    :     . \  `./::..
    POSTGRES        ,'    ..   .     .      .  . : ;':::.
     and history   /     :go. :       . :    \ : ;'.::.
                   |     ' .o8)     .  :|    : ,'. .
                  /     :   ~:'  . '   :/  . :/. .
                 /       ,  '          |   : /. .
                /       ,              |   ./.
                L._    .       ,' .:.  /  ,'.
               /-.     :.--._,-'~~~~~~| ,'|:
              ,--.    /   .:/         |/::| `.
              |-.    /   .;'      .-__)::/    \
 ...._____...-|-.  ,'  .;'      .' '.'|;'      |
   ~--..._____\-_-'  .:'      .'   /  '
    ___....--~~   _.-' `.___.'   ./
      ~~------+~~_. .    ~~    .,'
                  ~:_.' . . ._:'
                     ~~-+-+~~

                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
Installation        |/\    | \_/-'\ \
                    A |   /  ||   /_/
                      |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__
                    

dont need root to install it
go to chapter 16 on how to install it


                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
Architectural       |/\    | \_/-'\ \
Fundamentals        A |   /  ||   /_/
                      |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__
                    

client-server model
server process - manages database files,
accepts connections to database
perform actions for client
known as postgres

the client wants things to be done and could be anything

if the client and server are on differnt hosts they need a TCP/IP network connection

the postgres daemon handles multiple connections by forking a child server process for each incoming client process


                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
  Installation      |/\    | \_/-'\ \
from package        A |   /  ||   /_/
manager  Database     |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__

if using a package manager refer to it




        ____
       /.   \__
      /_  \_/  \   https://tecadmin.net/install-postgresql-server-on-ubuntu/
     // \  ___ |\
      snd|_| |_|



Adding user postgres to group ssl-cert

Creating config file /etc/postgresql-common/createcluster.conf with new version
Building PostgreSQL dictionaries from installed myspell/hunspell packages...
  en_us
Removing obsolete dictionary files:
Setting up postgresql-11 (11.3-1.pgdg16.04+1) ...
Creating new PostgreSQL cluster 11/main ...
/usr/lib/postgresql/11/bin/initdb -D /var/lib/postgresql/11/main --auth-local peer --auth-host md5
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.UTF-8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/11/main ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting dynamic shared memory implementation ... posix
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

Success. You can now start the database server using:

    


Ver Cluster Port Status Owner    Data directory              Log file
11  main    5432 down   postgres /var/lib/postgresql/11/main /var/log/postgresql/postgresql-11-main.log
update-alternatives: using /usr/share/postgresql/11/man/man1/postmaster.1.gz to provide /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz) in auto mode
Setting up postgresql (11+201.pgdg16.04+1) ...



to access postgres

sudo su - postgres
psql

to learn about basic connection to postgres
\conninfo

to quit
\q



                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
  Creating          |/\    | \_/-'\ \
    A               A |   /  ||   /_/
 Database             |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__



to create
https://www.liquidweb.com/kb/creating-and-deleting-a-postgresql-database/
CREATE DATABASE [dbname;]
    no response sucesss
    command not found: use  /usr/local/pgsql/bin/createdb mydb absolute path
    more problems refer to page 43 in handbook
     Database names must have an alphabetic first character and are limited to 63 bytes in length.

to destroy
    DROP DATABASE [dbname;]
    irrecoverable

to conect
    \c [dbname;]


                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
1.4  Accessing      |/\    | \_/-'\ \
    A               A |   /  ||   /_/
 Database             |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__

you can use psql console, a GUI like pgAdmin or writing your own that works with the protocol

psql mydb  (doesnt work)
 
as postgres
pg_ctlcluster 11 main start
its already running

SELECT version();
SELECT current_date;
SELECT 2 + 2;

if a command start with a  \ its a psql only command

\h for SQL help
\? for internal commands
\q to quit


                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
2  The SQL           |/\    | \_/-'\ \
    language         A |   /  ||   /_/
                       |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__


what postgres has is a modified extension


           _    _
          / \__/ \_____
concepts /  /  \  \    `\
         )  \''/  (     |\
         `\__)/__/'_\  / `
            //_|_|~|_|_|
            ^""'"' ""'"'

its a RDBMS
relation is a math word for table

SQL does not gurantee the order of tables in any way
tables are grouped to databases to a databease cluster managerd byh one postgres server


           _    _
          / \__/ \_____
create a /  /  \  \    `\
new table)  \''/  (     |\
         `\__)/__/'_\  / `
            //_|_|~|_|_|
            ^""'"' ""'"'


CREATE TABLE weather (
 city       varchar(80),
 temp_lo    int,         -- low temperature
 temp_hi    int,         -- high temperature
 prcp       real,         -- precipitation
 date       date
);


CREATE TABLE noop (
 city       varchar(80),
 temp_lo    int,         -- low temperature
 temp_hi    int,         -- high temperature
 prcp       real,         -- precipitation
 date       date
);


you can create this with line breaks just dont use semil colon
the first column is name second is data type -- is used for comments


CREATE TABLE cities (
 name       varchar(80),
 location    point
);

point is a psql only datatype

to remove a table
DROP TABLE tablename;



              _    _
             / \__/ \_____
 populate   /  /  \  \    `\
table       )  \''/  (     |\
            `\__)/__/'_\  / `
               //_|_|~|_|_|
              ^""'"' ""'"'

insert statement is used to fill a table

INSERT INTO weather VALUES ('San Francisco', 46, 50, 0.25,
 '1994-11-27');

constants that are not simple number must be surrounded by a single quote
point type  wants a coordinate pair
date accepts many formats

to specify the columns of the table

INSERT INTO weather (city, temp_lo, temp_hi, prcp, date)
 VALUES ('San Francisco', 43, 57, 0.0, '1994-11-29');

use the COPY command for more effeciency

COPY weather FROM '/home/user/weather.txt';



              _    _
             / \__/ \_____
 querying   /  /  \  \    `\
table       )  \''/  (     |\
            `\__)/__/'_\  / `
               //_|_|~|_|_|
              ^""'"' ""'"'
use SELECT
to select everything
SELECT * FROM weather;

to write expressions
SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;
this results in working with the data to produce more meaningful things to your app lookng the 2nd expression

AS  is used to relabel the output column, optional



             ___.---.___
           .'  (     )  '.
WHERE      )   /)' '(    )
           ',_( ';-;'\_,'
                 |-|
                 (")

to specifiy specific quotes from a string

to make conditionals
SELECT * FROM weather
 WHERE city = 'San Francisco' AND prcp > 0.0;


to sort use ORDER
SELECT * FROM weather
 ORDER BY city;

    if they happen to have the same name but thats not the order you want get more columns involved in the SQL command
    SELECT * FROM weather
     ORDER BY city, temp_lo;

to avoid duplcate rows

SELECT DISTINCT city, temp_hi
 FROM weather;

    but if this kicks out what you want use combos until Postgres understands to keep it



                         _    _
                        / \__/ \_____
    joins between      /  /  \  \    `\
table                  )  \''/  (     |\
                       `\__)/__/'_\  / `
                          //_|_|~|_|_|
                         ^""'"' ""'"'

if a query works with more than one table its a join

SELECT city, temp_lo, temp_hi, prcp, date, location
    FROM weather, cities
    WHERE city = name;


      _    _
     /=\""/=\
    (=(0_0 |=)__
     \_\ _/_/   )     if a index in not availbe in one of the rows of the table join
       /_/   _  /\      the join query fills it with the previous index. this gets messy
       |/ |\ || |
         ~ ~  ~

                   ___.---.___
                 .'  (     )  '.
INNER JOIN       )   /)' '(    )
                 ',_( ';-;'\_,'
                       |-|
                       (")


SELECT *
 FROM weather INNER JOIN cities ON (weather.city = cities.name);
some times you need to specify whats going on to make your joins cleaner, this is know as qualifying

SELECT weather.city, weather.temp_lo, weather.temp_hi,
    weather.prcp, weather.date, cities.location
    FROM weather, cities
    WHERE cities.name = weather.city;


                   ___.---.___
                 .'  (     )  '.
OUTER JOIN       )   /)' '(    )
                 ',_( ';-;'\_,'
                       |-|
                       (")

when you need empty values where they belong in join statements

SELECT * FROM weather LEFT OUTER JOIN cities ON (weather.city =
 cities.name);

LEFT OUTER JOINS is when the table is on the left of the join,


                   ___.---.___
                 .'  (     )  '.
SELF JOIN        )   /)' '(    )
                 ',_( ';-;'\_,'
                       |-|
                       (")

joining a table against itself, done for calcuations amongst in the table


SELECT W1.city, W1.temp_lo AS low, W1.temp_hi AS high,
 W2.city, W2.temp_lo AS low, W2.temp_hi AS high
 FROM weather W1, weather W2
 WHERE W1.temp_lo < W2.temp_lo
 AND W1.temp_hi > W2.temp_hi;

the tables are relabed in FROM
seen frequently


SELECT W1.city, W1.temp_lo AS lowest, W1.temp_hi AS highest,
    W2.city, W2.temp_lo AS low, W2.temp_hi AS high
    FROM weather W1, weather W2
    WHERE W1.temp_lo < W2.temp_lo
    AND W1.temp_hi > W2.temp_hi;


      _    _
     /=\""/=\
    (=(0_0 |=)__
     \_\ _/_/   )    this is like a double loop for every iter in the table, a second iteration is done
       /_/   _  /\
       |/ |\ || |
         ~ ~  ~


      _    _
     /=\""/=\
    (=(0_0 |=)__
     \_\ _/_/   )    you will see plenty of table abbreviation in SQL programming
       /_/   _  /\
       |/ |\ || |
         ~ ~  ~


                         _    _
                        / \__/ \_____
    aggregate          /  /  \  \    `\
    functions          )  \''/  (     |\
                       `\__)/__/'_\  / `
                          //_|_|~|_|_|
                         ^""'"' ""'"'

 An aggregate
function computes a single result from multiple input rows

to know what city this is related to use subquery

SELECT city FROM weather
 WHERE temp_lo = (SELECT max(temp_lo) FROM weather);





using GROUP BY properly elimates unwanted items
SELECT city, max(temp_lo)
 FROM weather
 GROUP BY city;


use having when you need to return a bool from the comparison of the result of an aggregate function with
another item becuase it does not return the item it retruns bool


SELECT city, max(temp_lo) < 40
 FROM weather
 GROUP BY city
 HAVING max(temp_lo) < 40;

if you want names beginning with S


      _    _
     /=\""/=\
    (=(0_0 |=)__
     \_\ _/_/   )   aggregate functions must be used with HAVING and not with WHERE,that the difference
       /_/   _  /\  that expains why can use them tehre
       |/ |\ || |
         ~ ~  ~


                         _    _
                        / \__/ \_____
    Updates            /  /  \  \    `\
    functions          )  \''/  (     |\
                       `\__)/__/'_\  / `
                          //_|_|~|_|_|
                         ^""'"' ""'"'

how you change items in a table

UPDATE weather
 SET temp_hi = temp_hi - 2, temp_lo = temp_lo - 2
 WHERE date > '1994-11-28';


                         _    _
                        / \__/ \_____
    Deletions          /  /  \  \    `\
    functions          )  \''/  (     |\
                       `\__)/__/'_\  / `
                          //_|_|~|_|_|
                         ^""'"' ""'"'


to delete a row
DELETE FROM weather WHERE city = 'Hayward';

DELETE from tablename
it goes and empties the table the table
]




                       .-~~-. .--.
                      /      /   "\
                     /    \ |  \   \
3  Advanced          |/\    | \_/-'\ \
    Features         A |   /  ||   /_/
                       |__||__||
                     /~~~~~~~~~~\
                    /\_/\_/\_/\_/\
                   /\/ \/ \/ \/ \/\
                __/________________\__


               _    _
              / \__/ \_____
3.1 concepts /  /  \  \    `\
             )  \''/  (     |\
             `\__)/__/'_\  / `
                //_|_|~|_|_|
                ^""'"' ""'"'

making management easier and prevent data loss/corrpution


               _    _
              / \__/ \_____
3.2 views    /  /  \  \    `\
             )  \''/  (     |\
             `\__)/__/'_\  / `
                //_|_|~|_|_|
                ^""'"' ""'"'

view - a variable that holds a SQL query and acts as a table

CREATE VIEW myview AS
    SELECT city, temp_lo, temp_hi, prcp, date, location
    FROM weather, cities
    WHERE city = name;

SELECT * FROM myview;


      _    _
     /=\""/=\
    (=(0_0 |=)__
     \_\ _/_/   )   use views a lot database developers love that, also use views on views, very efficient
       /_/   _  /\
       |/ |\ || |
         ~ ~  ~


               _    _
              / \__/ \_____
3.3 foreign  /  /  \  \    `\
    keys     )  \''/  (     |\
             `\__)/__/'_\  / `
                //_|_|~|_|_|
                ^""'"' ""'"'

sometimes between two related tables you want to make sure if there is something meaningful in the first table that is used for the second table its there in the first table or it cant be added to the second table

in database mydb

CREATE TABLE cities (
    city varchar(80) primary key,
    location point
);


CREATE TABLE weather (
    city varchar(80) references cities(city),
    temp_lo int,
    temp_hi int,
    prcp real,
    date date
);

so  that doing this

INSERT INTO weather VALUES ('Berkeley', 45, 53, 0.0, '1994-11-28');

wont work

refer to ch 5 for more info



                   _    _
                  / \__/ \_____
3.4 transactions /  /  \  \    `\
                 )  \''/  (     |\
                 `\__)/__/'_\  / `
                    //_|_|~|_|_|
                    ^""'"' ""'"'


they convert everything into one step and if something fails, it does not ruin your database.
IT HAPPENS COMPLETELY OR NOT AT ALL

also makes sure that the transaction is 100% logged on permanent storage in order to be complete

also  multiple transactions cannot see what each other is doing, they just have the database before it was touched by another transaction and after

in PostgreSQL its done like this

ex
 -------------------------------------------------------------------------
INSERT INTO cities (city, location)
    VALUES ('San Francisco', '(193,27)');
BEGIN;
    INSERT INTO cities (city, location)
        VALUES ('Berkeley', '(221,5)');
    DELETE FROM cities WHERE city = 'San Francisco';
    INSERT INTO weather VALUES ('Berkeley', 45, 53, 0.0, '1994-11-28');
    INSERT INTO weather VALUES ('Jayton', 45, 53, 0.0, '1994-11-28');
COMMIT;
it fails because Jayton is not in city for cities

 -------------------------------------------------------------------------

                  ___.---.___
                 .'  (     )  '.
ROLLBACKS        )   /)' '(    )
                 ',_( ';-;'\_,'
                       |-|
                       (")

say if partway a SQL query fulfills a conditional we can use ROLLBACK instead of commit, and all updated are canceled


ex
 -------------------------------------------------------------------------
INSERT INTO cities (city, location)
    VALUES ('San Francisco', '(193,27)');
BEGIN;
    INSERT INTO cities (city, location)
        VALUES ('Berkeley', '(221,5)');
    DELETE FROM cities WHERE city = 'San Francisco';
ROLLBACK;
    INSERT INTO weather VALUES ('San Francisco', 45, 53, 0.0, '1994-11-28');


it rolls back say we dont want San Francisco to be deleted from our cities, also Berkeley is not
included in cities

 -------------------------------------------------------------------------

      _    _
     /=\""/=\
    (=(0_0 |=)__
     \_\ _/_/   )   in postgres every sql query is wrapped in its own tranaction
       /_/   _  /\
       |/ |\ || |
         ~ ~  ~



                   ___.---.___
                 .'  (     )  '.
SAVEPOINTS       )   /)' '(    )
                 ',_( ';-;'\_,'
                       |-|
                       (")

this is how you selectively keep parts of a transaction
put SAVEPOINT at the end of a SQL query, and rollback with ROLLBACK TO;

INSERT INTO cities (city, location)
    VALUES ('San Francisco', '(193,27)');

ex
--------------------------------------------------
CREATE TABLE accounts(
 name       varchar(80),
 balance    float
);

INSERT INTO  accounts (name, balance)
    VALUES ('Alice', 700.00),('Bob', 900.00),('Wally', 200.00);

BEGIN;

UPDATE accounts SET balance = balance - 100.00
 WHERE name = 'Alice';
SAVEPOINT my_savepoint;
UPDATE accounts SET balance = balance + 100.00
 WHERE name = 'Bob';
-- oops ... forget that and use Wally's account
ROLLBACK TO my_savepoint;
UPDATE accounts SET balance = balance + 100.00
 WHERE name = 'Wally';
COMMIT;
-------------------------------------------------------


                   _    _
                  / \__/ \_____
3.5 window       /  /  \  \    `\
    functions    )  \''/  (     |\
                 `\__)/__/'_\  / `
                    //_|_|~|_|_|
                    ^""'"' ""'"'

 window function performs a calculation across a set of table rows that are somehow related to the current
row. but unlike aggregate functions, the rows are not grouped into a single output

have to learn about this later cannot find an example





                   _    _
                  / \__/ \_____
3.6 inheritance  /  /  \  \    `\
                 )  \''/  (     |\
                 `\__)/__/'_\  / `
                    //_|_|~|_|_|
                    ^""'"' ""'"'


ann implementation of OOP, best way to think of it javascript class extensions


database: inheritance

CREATE TABLE cities (
    name text,
    population real,
    altitude int -- (in ft)
);
CREATE TABLE capitals (
    state char(2)
) INHERITS (cities);
